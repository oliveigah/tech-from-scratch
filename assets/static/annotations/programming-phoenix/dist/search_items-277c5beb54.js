searchNodes=[{"doc":"ProgrammingPhoenix keeps the contexts that define your domain and business logic.Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.","ref":"ProgrammingPhoenix.html","title":"ProgrammingPhoenix","type":"module"},{"doc":"Account's context","ref":"ProgrammingPhoenix.Accounts.html","title":"ProgrammingPhoenix.Accounts","type":"module"},{"doc":"","ref":"ProgrammingPhoenix.Accounts.html#get_user/1","title":"ProgrammingPhoenix.Accounts.get_user/1","type":"function"},{"doc":"","ref":"ProgrammingPhoenix.Accounts.html#get_user_by/1","title":"ProgrammingPhoenix.Accounts.get_user_by/1","type":"function"},{"doc":"","ref":"ProgrammingPhoenix.Accounts.html#list_users/0","title":"ProgrammingPhoenix.Accounts.list_users/0","type":"function"},{"doc":"","ref":"ProgrammingPhoenix.Accounts.User.html","title":"ProgrammingPhoenix.Accounts.User","type":"module"},{"doc":"","ref":"ProgrammingPhoenix.Repo.html","title":"ProgrammingPhoenix.Repo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3.","ref":"ProgrammingPhoenix.Repo.html#aggregate/3","title":"ProgrammingPhoenix.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4.","ref":"ProgrammingPhoenix.Repo.html#aggregate/4","title":"ProgrammingPhoenix.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2.","ref":"ProgrammingPhoenix.Repo.html#all/2","title":"ProgrammingPhoenix.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2.","ref":"ProgrammingPhoenix.Repo.html#checkout/2","title":"ProgrammingPhoenix.Repo.checkout/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenix.Repo.html#child_spec/1","title":"ProgrammingPhoenix.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0.","ref":"ProgrammingPhoenix.Repo.html#config/0","title":"ProgrammingPhoenix.Repo.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1.","ref":"ProgrammingPhoenix.Repo.html#default_options/1","title":"ProgrammingPhoenix.Repo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2.","ref":"ProgrammingPhoenix.Repo.html#delete/2","title":"ProgrammingPhoenix.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2.","ref":"ProgrammingPhoenix.Repo.html#delete!/2","title":"ProgrammingPhoenix.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2.","ref":"ProgrammingPhoenix.Repo.html#delete_all/2","title":"ProgrammingPhoenix.Repo.delete_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2.","ref":"ProgrammingPhoenix.Repo.html#exists?/2","title":"ProgrammingPhoenix.Repo.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query.See Ecto.Adapters.SQL.explain/4 for more information.","ref":"ProgrammingPhoenix.Repo.html#explain/3","title":"ProgrammingPhoenix.Repo.explain/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3.","ref":"ProgrammingPhoenix.Repo.html#get/3","title":"ProgrammingPhoenix.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3.","ref":"ProgrammingPhoenix.Repo.html#get!/3","title":"ProgrammingPhoenix.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3.","ref":"ProgrammingPhoenix.Repo.html#get_by/3","title":"ProgrammingPhoenix.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3.","ref":"ProgrammingPhoenix.Repo.html#get_by!/3","title":"ProgrammingPhoenix.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0.","ref":"ProgrammingPhoenix.Repo.html#get_dynamic_repo/0","title":"ProgrammingPhoenix.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0.","ref":"ProgrammingPhoenix.Repo.html#in_transaction?/0","title":"ProgrammingPhoenix.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2.","ref":"ProgrammingPhoenix.Repo.html#insert/2","title":"ProgrammingPhoenix.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2.","ref":"ProgrammingPhoenix.Repo.html#insert!/2","title":"ProgrammingPhoenix.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3.","ref":"ProgrammingPhoenix.Repo.html#insert_all/3","title":"ProgrammingPhoenix.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2.","ref":"ProgrammingPhoenix.Repo.html#insert_or_update/2","title":"ProgrammingPhoenix.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2.","ref":"ProgrammingPhoenix.Repo.html#insert_or_update!/2","title":"ProgrammingPhoenix.Repo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2.","ref":"ProgrammingPhoenix.Repo.html#load/2","title":"ProgrammingPhoenix.Repo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2.","ref":"ProgrammingPhoenix.Repo.html#one/2","title":"ProgrammingPhoenix.Repo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2.","ref":"ProgrammingPhoenix.Repo.html#one!/2","title":"ProgrammingPhoenix.Repo.one!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3.","ref":"ProgrammingPhoenix.Repo.html#preload/3","title":"ProgrammingPhoenix.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3.","ref":"ProgrammingPhoenix.Repo.html#prepare_query/3","title":"ProgrammingPhoenix.Repo.prepare_query/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1.","ref":"ProgrammingPhoenix.Repo.html#put_dynamic_repo/1","title":"ProgrammingPhoenix.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query/4 for more information.","ref":"ProgrammingPhoenix.Repo.html#query/3","title":"ProgrammingPhoenix.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query!/4 for more information.","ref":"ProgrammingPhoenix.Repo.html#query!/3","title":"ProgrammingPhoenix.Repo.query!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1.","ref":"ProgrammingPhoenix.Repo.html#rollback/1","title":"ProgrammingPhoenix.Repo.rollback/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1.","ref":"ProgrammingPhoenix.Repo.html#start_link/1","title":"ProgrammingPhoenix.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1.","ref":"ProgrammingPhoenix.Repo.html#stop/1","title":"ProgrammingPhoenix.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2.","ref":"ProgrammingPhoenix.Repo.html#stream/2","title":"ProgrammingPhoenix.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL.See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"ProgrammingPhoenix.Repo.html#to_sql/2","title":"ProgrammingPhoenix.Repo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2.","ref":"ProgrammingPhoenix.Repo.html#transaction/2","title":"ProgrammingPhoenix.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2.","ref":"ProgrammingPhoenix.Repo.html#update/2","title":"ProgrammingPhoenix.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2.","ref":"ProgrammingPhoenix.Repo.html#update!/2","title":"ProgrammingPhoenix.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3.","ref":"ProgrammingPhoenix.Repo.html#update_all/3","title":"ProgrammingPhoenix.Repo.update_all/3","type":"function"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on.This can be used in your application as:use ProgrammingPhoenixWeb, :controller use ProgrammingPhoenixWeb, :viewThe definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases.Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"ProgrammingPhoenixWeb.html","title":"ProgrammingPhoenixWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"ProgrammingPhoenixWeb.html#__using__/1","title":"ProgrammingPhoenixWeb.__using__/1","type":"macro"},{"doc":"","ref":"ProgrammingPhoenixWeb.html#channel/0","title":"ProgrammingPhoenixWeb.channel/0","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.html#controller/0","title":"ProgrammingPhoenixWeb.controller/0","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.html#router/0","title":"ProgrammingPhoenixWeb.router/0","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.html#view/0","title":"ProgrammingPhoenixWeb.view/0","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Endpoint.html","title":"ProgrammingPhoenixWeb.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3.","ref":"ProgrammingPhoenixWeb.Endpoint.html#broadcast/3","title":"ProgrammingPhoenixWeb.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3.","ref":"ProgrammingPhoenixWeb.Endpoint.html#broadcast!/3","title":"ProgrammingPhoenixWeb.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4.","ref":"ProgrammingPhoenixWeb.Endpoint.html#broadcast_from/4","title":"ProgrammingPhoenixWeb.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4.","ref":"ProgrammingPhoenixWeb.Endpoint.html#broadcast_from!/4","title":"ProgrammingPhoenixWeb.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2.","ref":"ProgrammingPhoenixWeb.Endpoint.html#call/2","title":"ProgrammingPhoenixWeb.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"ProgrammingPhoenixWeb.Endpoint.html#child_spec/1","title":"ProgrammingPhoenixWeb.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for keyReturns default if the key does not exist.","ref":"ProgrammingPhoenixWeb.Endpoint.html#config/2","title":"ProgrammingPhoenixWeb.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"ProgrammingPhoenixWeb.Endpoint.html#config_change/2","title":"ProgrammingPhoenixWeb.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"ProgrammingPhoenixWeb.Endpoint.html#host/0","title":"ProgrammingPhoenixWeb.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"ProgrammingPhoenixWeb.Endpoint.html#init/1","title":"ProgrammingPhoenixWeb.Endpoint.init/1","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3.","ref":"ProgrammingPhoenixWeb.Endpoint.html#local_broadcast/3","title":"ProgrammingPhoenixWeb.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4.","ref":"ProgrammingPhoenixWeb.Endpoint.html#local_broadcast_from/4","title":"ProgrammingPhoenixWeb.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"ProgrammingPhoenixWeb.Endpoint.html#path/1","title":"ProgrammingPhoenixWeb.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"ProgrammingPhoenixWeb.Endpoint.html#script_name/0","title":"ProgrammingPhoenixWeb.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree.","ref":"ProgrammingPhoenixWeb.Endpoint.html#start_link/1","title":"ProgrammingPhoenixWeb.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static. Meant to be used for Subresource Integrity with CDNs.","ref":"ProgrammingPhoenixWeb.Endpoint.html#static_integrity/1","title":"ProgrammingPhoenixWeb.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity.","ref":"ProgrammingPhoenixWeb.Endpoint.html#static_lookup/1","title":"ProgrammingPhoenixWeb.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static.","ref":"ProgrammingPhoenixWeb.Endpoint.html#static_path/1","title":"ProgrammingPhoenixWeb.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information.It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"ProgrammingPhoenixWeb.Endpoint.html#static_url/0","title":"ProgrammingPhoenixWeb.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct.It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"ProgrammingPhoenixWeb.Endpoint.html#struct_url/0","title":"ProgrammingPhoenixWeb.Endpoint.struct_url/0","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Endpoint.html#subscribe/2","title":"ProgrammingPhoenixWeb.Endpoint.subscribe/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Endpoint.html#unsubscribe/1","title":"ProgrammingPhoenixWeb.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information.It uses the configuration under :url to generate such.","ref":"ProgrammingPhoenixWeb.Endpoint.html#url/0","title":"ProgrammingPhoenixWeb.Endpoint.url/0","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"ProgrammingPhoenixWeb.ErrorHelpers.html","title":"ProgrammingPhoenixWeb.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"ProgrammingPhoenixWeb.ErrorHelpers.html#error_tag/2","title":"ProgrammingPhoenixWeb.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"ProgrammingPhoenixWeb.ErrorHelpers.html#translate_error/1","title":"ProgrammingPhoenixWeb.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.ErrorView.html","title":"ProgrammingPhoenixWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"ProgrammingPhoenixWeb.ErrorView.html#__resource__/0","title":"ProgrammingPhoenixWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"ProgrammingPhoenixWeb.ErrorView.html#render/2","title":"ProgrammingPhoenixWeb.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"ProgrammingPhoenixWeb.ErrorView.html#template_not_found/2","title":"ProgrammingPhoenixWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"A module providing Internationalization with a gettext-based API.By using Gettext, your module gains a set of macros for translations, for example:import ProgrammingPhoenixWeb.Gettext # Simple translation gettext(&quot;Here is the string to translate&quot;) # Plural translation ngettext(&quot;Here is the string to translate&quot;, &quot;Here are the strings to translate&quot;, 3) # Domain-based translation dgettext(&quot;errors&quot;, &quot;Here is the error message to translate&quot;)See the Gettext Docs for detailed usage.","ref":"ProgrammingPhoenixWeb.Gettext.html","title":"ProgrammingPhoenixWeb.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3.","ref":"ProgrammingPhoenixWeb.Gettext.html#dgettext/3","title":"ProgrammingPhoenixWeb.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2.","ref":"ProgrammingPhoenixWeb.Gettext.html#dgettext_noop/2","title":"ProgrammingPhoenixWeb.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5.","ref":"ProgrammingPhoenixWeb.Gettext.html#dngettext/5","title":"ProgrammingPhoenixWeb.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3.","ref":"ProgrammingPhoenixWeb.Gettext.html#dngettext_noop/3","title":"ProgrammingPhoenixWeb.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4.","ref":"ProgrammingPhoenixWeb.Gettext.html#dpgettext/4","title":"ProgrammingPhoenixWeb.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"ProgrammingPhoenixWeb.Gettext.html#dpgettext_noop/3","title":"ProgrammingPhoenixWeb.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6.","ref":"ProgrammingPhoenixWeb.Gettext.html#dpngettext/6","title":"ProgrammingPhoenixWeb.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"ProgrammingPhoenixWeb.Gettext.html#dpngettext_noop/4","title":"ProgrammingPhoenixWeb.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2.","ref":"ProgrammingPhoenixWeb.Gettext.html#gettext/2","title":"ProgrammingPhoenixWeb.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1.","ref":"ProgrammingPhoenixWeb.Gettext.html#gettext_comment/1","title":"ProgrammingPhoenixWeb.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1.","ref":"ProgrammingPhoenixWeb.Gettext.html#gettext_noop/1","title":"ProgrammingPhoenixWeb.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2.","ref":"ProgrammingPhoenixWeb.Gettext.html#handle_missing_bindings/2","title":"ProgrammingPhoenixWeb.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6.","ref":"ProgrammingPhoenixWeb.Gettext.html#handle_missing_plural_translation/6","title":"ProgrammingPhoenixWeb.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4.","ref":"ProgrammingPhoenixWeb.Gettext.html#handle_missing_translation/4","title":"ProgrammingPhoenixWeb.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Gettext.html#lgettext/5","title":"ProgrammingPhoenixWeb.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Gettext.html#lngettext/7","title":"ProgrammingPhoenixWeb.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4.","ref":"ProgrammingPhoenixWeb.Gettext.html#ngettext/4","title":"ProgrammingPhoenixWeb.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2.","ref":"ProgrammingPhoenixWeb.Gettext.html#ngettext_noop/2","title":"ProgrammingPhoenixWeb.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3.","ref":"ProgrammingPhoenixWeb.Gettext.html#pgettext/3","title":"ProgrammingPhoenixWeb.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"ProgrammingPhoenixWeb.Gettext.html#pgettext_noop/2","title":"ProgrammingPhoenixWeb.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5.","ref":"ProgrammingPhoenixWeb.Gettext.html#pngettext/5","title":"ProgrammingPhoenixWeb.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"ProgrammingPhoenixWeb.Gettext.html#pngettext_noop/3","title":"ProgrammingPhoenixWeb.Gettext.pngettext_noop/3","type":"macro"},{"doc":"","ref":"ProgrammingPhoenixWeb.LayoutView.html","title":"ProgrammingPhoenixWeb.LayoutView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"ProgrammingPhoenixWeb.LayoutView.html#__resource__/0","title":"ProgrammingPhoenixWeb.LayoutView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"ProgrammingPhoenixWeb.LayoutView.html#render/2","title":"ProgrammingPhoenixWeb.LayoutView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"ProgrammingPhoenixWeb.LayoutView.html#template_not_found/2","title":"ProgrammingPhoenixWeb.LayoutView.template_not_found/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.PageController.html","title":"ProgrammingPhoenixWeb.PageController","type":"module"},{"doc":"","ref":"ProgrammingPhoenixWeb.PageController.html#index/2","title":"ProgrammingPhoenixWeb.PageController.index/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.PageView.html","title":"ProgrammingPhoenixWeb.PageView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"ProgrammingPhoenixWeb.PageView.html#__resource__/0","title":"ProgrammingPhoenixWeb.PageView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"ProgrammingPhoenixWeb.PageView.html#render/2","title":"ProgrammingPhoenixWeb.PageView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"ProgrammingPhoenixWeb.PageView.html#template_not_found/2","title":"ProgrammingPhoenixWeb.PageView.template_not_found/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.html","title":"ProgrammingPhoenixWeb.Router","type":"module"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.html#api/2","title":"ProgrammingPhoenixWeb.Router.api/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.html#browser/2","title":"ProgrammingPhoenixWeb.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"ProgrammingPhoenixWeb.Router.html#call/2","title":"ProgrammingPhoenixWeb.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"ProgrammingPhoenixWeb.Router.html#init/1","title":"ProgrammingPhoenixWeb.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from ProgrammingPhoenixWeb.Router.","ref":"ProgrammingPhoenixWeb.Router.Helpers.html","title":"ProgrammingPhoenixWeb.Router.Helpers","type":"module"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#live_dashboard_path/2","title":"ProgrammingPhoenixWeb.Router.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#live_dashboard_path/3","title":"ProgrammingPhoenixWeb.Router.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#live_dashboard_path/4","title":"ProgrammingPhoenixWeb.Router.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#live_dashboard_path/5","title":"ProgrammingPhoenixWeb.Router.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#live_dashboard_url/2","title":"ProgrammingPhoenixWeb.Router.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#live_dashboard_url/3","title":"ProgrammingPhoenixWeb.Router.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#live_dashboard_url/4","title":"ProgrammingPhoenixWeb.Router.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#live_dashboard_url/5","title":"ProgrammingPhoenixWeb.Router.Helpers.live_dashboard_url/5","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#page_path/2","title":"ProgrammingPhoenixWeb.Router.Helpers.page_path/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#page_path/3","title":"ProgrammingPhoenixWeb.Router.Helpers.page_path/3","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#page_url/2","title":"ProgrammingPhoenixWeb.Router.Helpers.page_url/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#page_url/3","title":"ProgrammingPhoenixWeb.Router.Helpers.page_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#path/2","title":"ProgrammingPhoenixWeb.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#static_integrity/2","title":"ProgrammingPhoenixWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#static_path/2","title":"ProgrammingPhoenixWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#static_url/2","title":"ProgrammingPhoenixWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#url/1","title":"ProgrammingPhoenixWeb.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#user_path/2","title":"ProgrammingPhoenixWeb.Router.Helpers.user_path/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#user_path/3","title":"ProgrammingPhoenixWeb.Router.Helpers.user_path/3","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#user_path/4","title":"ProgrammingPhoenixWeb.Router.Helpers.user_path/4","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#user_url/2","title":"ProgrammingPhoenixWeb.Router.Helpers.user_url/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#user_url/3","title":"ProgrammingPhoenixWeb.Router.Helpers.user_url/3","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Router.Helpers.html#user_url/4","title":"ProgrammingPhoenixWeb.Router.Helpers.user_url/4","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Telemetry.html","title":"ProgrammingPhoenixWeb.Telemetry","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.See Supervisor.","ref":"ProgrammingPhoenixWeb.Telemetry.html#child_spec/1","title":"ProgrammingPhoenixWeb.Telemetry.child_spec/1","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Telemetry.html#metrics/0","title":"ProgrammingPhoenixWeb.Telemetry.metrics/0","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.Telemetry.html#start_link/1","title":"ProgrammingPhoenixWeb.Telemetry.start_link/1","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.UserController.html","title":"ProgrammingPhoenixWeb.UserController","type":"module"},{"doc":"","ref":"ProgrammingPhoenixWeb.UserController.html#index/2","title":"ProgrammingPhoenixWeb.UserController.index/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.UserController.html#show/2","title":"ProgrammingPhoenixWeb.UserController.show/2","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.UserSocket.html","title":"ProgrammingPhoenixWeb.UserSocket","type":"module"},{"doc":"","ref":"ProgrammingPhoenixWeb.UserView.html","title":"ProgrammingPhoenixWeb.UserView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"ProgrammingPhoenixWeb.UserView.html#__resource__/0","title":"ProgrammingPhoenixWeb.UserView.__resource__/0","type":"function"},{"doc":"","ref":"ProgrammingPhoenixWeb.UserView.html#first_name/1","title":"ProgrammingPhoenixWeb.UserView.first_name/1","type":"function"},{"doc":"Renders the given template locally.","ref":"ProgrammingPhoenixWeb.UserView.html#render/2","title":"ProgrammingPhoenixWeb.UserView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"ProgrammingPhoenixWeb.UserView.html#template_not_found/2","title":"ProgrammingPhoenixWeb.UserView.template_not_found/2","type":"function"},{"doc":"1 - Introducing PhoenixPhoenix is a web framework designed for real time communication, exchanging small data each time instead of one massive updateThe secret sauce of phoenix is the right mix of many features found on other technologies, metaprogramming like lisp, DSLs like ruby, transformations series like clojure, and high scalability with erlang.Some of the most noticible features are channels and reactive friendly apis, like some of the best JS frameworks, but it works on scale","ref":"chapter_1.html","title":"1 - Introducing Phoenix","type":"extras"},{"doc":"Phoenix provides a good amount of very common features right out of the box, which enable programmers be more productive by does not have to worry about such commom tasks like database connection and JSON decodingOn the framework's classic productivity vs maintainablitiy problem, phoenix takes an layered approach to complexity, layering instead of hiding it.It is a highly opinionated frameworkOut of the box, phoenix provides a baseline strucuture to work with, if the need to make a obscure change arrises, the developer can pick under the hood of each complexity layerEach of these layers have great documentation avaiable online, on terminal or text editorsData immutability achieved by the functional paradigm of elixir plays a great role on maintainablitiy","ref":"chapter_1.html#1-1-productive","title":"1 - Introducing Phoenix - 1.1 - Productive","type":"extras"},{"doc":"Phoenix leverages the BEAM concurrency model to provide efficient usage of hardwareThis simplification of concurency makes developers life easier and results in more productivity","ref":"chapter_1.html#1-2-concurrent","title":"1 - Introducing Phoenix - 1.2 - Concurrent","type":"extras"},{"doc":"Phoenix abstractions leverage macros functionality to make otherwise complex tasks easier and reusableThe modularity of these abstractions makes phoenix highly extensible","ref":"chapter_1.html#1-3-beautiful-code","title":"1 - Introducing Phoenix - 1.3 - Beautiful Code","type":"extras"},{"doc":"Phoenix leverages BEAM concurrency model to provide a way out of scale by forgetting, providing light weight processes to keep connections and stateThis enable building highly interactive real time applications","ref":"chapter_1.html#1-4-interactive","title":"1 - Introducing Phoenix - 1.4 - Interactive","type":"extras"},{"doc":"Phoenix leverages OTP supervisors to provide nice error handling and self restore connectionsThis increases system's reliability","ref":"chapter_1.html#1-5-reliabe","title":"1 - Introducing Phoenix - 1.5 - Reliabe","type":"extras"},{"doc":"2 - First StepsThe philosopy behind phoenix is that every web server can be abstracted to a function. The browser sends a function call to a remote server that takes de request and generate some response. Therefore web server is a natural problem to be solved by a functional language.","ref":"chapter_2.html","title":"2 - First Steps","type":"extras"},{"doc":"The elixir's pipe syntax is widely used in phoenix, the benefits of pipes are many, from readability to composibility, pipes helps write elegant and expressive codeThe entry data to the phoenix pipe is a struct called connection that is literally all the universe of things you need to generate your responseEach layer of phoenix makes transformations over this connection passing it through the whole pipe, at the end of the pipe the connection must contains the server's response to clientAll these premises establishes the basic structure of every phoenix layer, a series of piped functions passing the connection over and overThe basic layers of phoenix are:connection |&gt; endpoint() # The first point of contact of phoenix |&gt; router() # Redirect the request to the proper controller |&gt; pipelines() # Custom series of transformations that can be related to specific connection&#39;s properties |&gt; controller() # Execute the proper business logicInside the controller the function that execute the proper business logic is commomly called action, so each contoller must execute an actionAll related business logic must be encapsulated in modules called contexts, so each action lives inside a context","ref":"chapter_2.html#2-1-simple-functions","title":"2 - First Steps - 2.1 - Simple Functions","type":"extras"},{"doc":"To run the default phoenix implementation you must have: Erlang, Elixir, PostgreSQL, Node.js, inotiffy(linux only)Phoenix can be installed using the mix tool from hex mix archive.install hex phx_newAfter all things set, the commom path to init a phoenix app is:mix phx.new project_name to create the projects base structurenpm install inside the assets foldermix ecto.create to create the project databasemix phx.server to run the server","ref":"chapter_2.html#2-2-setup","title":"2 - First Steps - 2.2 - Setup","type":"extras"},{"doc":"2.3.1 - RouterThe match between a route and a cotroller function is done inside the routing layer that is defined by default on lib/\#{project}_web/router.ex# Routing layer sample scope &quot;/&quot;, ProgrammingPhoenixWeb do pipe_through :browser get &quot;/&quot;, PageController, :index get &quot;/hello/:name&quot;, HelloController, :world endscope defines a base path to matchpipe_through make some housekepping commom to all requests of the same type, in this sample this type is :browserget will handle get requests that matches /hello/:name and forward them to the :world action inside HelloController controller2.3.2 - ControllerAll controllers in phoenix are inside lib/\#{project}_web/controller# Controller sample defmodule ProgrammingPhoenixWeb.HelloController do use ProgrammingPhoenixWeb, :controller def world(conn, %{&quot;name&quot; =&gt; name}) do render(conn, &quot;world.html&quot;, name: name) end endController usually use the \#{project}Web module passing the :controller atom as option, this will inject code inside the module and enable the usage of the phoenix controller APIFunctions inside the controller that are used by the router are called actions2.3.3 - ViewUsually views are inside lib/\#{project}_web/views/\#{view_name}.ex# View sample defmodule ProgrammingPhoenixWeb.HelloView do use ProgrammingPhoenixWeb, :view endThis sample doesnt do much, but it injects some functions to enable a template renderingHere we are relying on the defaults, but we can override them anytime2.3.4 - TemplateTemplates are usually defined inside lib/\#{project}_web/templates/\#{controller}/\#{action}.html.eex&lt;h1&gt;From Template: Hello &lt;%= String.capitalize(@name)%&gt;&lt;/h1&gt;Templates are htmls that will be converted to a function and phoenix will use to render the pageBesides the normal html behaviour you can inject elixir code inside it by using &lt;%= CODE %&gt; the code will be evaluated and will be replaced inside the htmlThe variables that are visible inside the template must be passed by the controller when it calls the function render","ref":"chapter_2.html#2-3-building-features","title":"2 - First Steps - 2.3 - Building Features","type":"extras"},{"doc":"Phoenix is all about pipe small functions that transforms the connection, using the Plug library to achieve itThese small functions are very explicity in what they do and you can check it by seing its codeYou can even create your's small functions and pipe the connection through it making your custom changes, actually this is the standard way to develop with phoenixYour's custom functions have the same behaviour than the phoenix ones, takes a connection modify and return it2.4.1 - File StructureEvery phoenix project contains the same structures of a standard mix projectBeyond the standard mix structure there some others:/assets browser files like CSS and JS/lib/\#{project} core system (supervision trees, processes and bussiness logic)/lib/\#{project}_web web related code (controllers, views, templates)Inside /config the file \#{env}.secret.exs is responsible to load secrets and other values from the env vars that are usually populated by deployment tasks2.4.2 - EndpointsAn endpoint is the begining of our world that means that is there where the web hands off the request and our application assumesThe configuration of endpoints is done inside the main config file# Configures the endpoint config :programming_phoenix, ProgrammingPhoenixWeb.Endpoint, url: [host: &quot;localhost&quot;], secret_key_base: &quot;lDbQ/NK3POAxMyU1ainArEHFknqfeoQe/P44tK6qY1z3kc1yEzl1gT8ARVDaelgf&quot;, render_errors: [view: ProgrammingPhoenixWeb.ErrorView, accepts: ~w(html json), layout: false], pubsub_server: ProgrammingPhoenix.PubSub, live_view: [signing_salt: &quot;wPmMzm1b&quot;] The code of endpoint's module is inside /lib/\#{project}_web/endpoint.exThe endpoint is basically a pipeline of functions over the connection (as always)You can check the code there and replace(or add) exactly the function you need by another custom plugThe last plug in endpoint's code is routerYou can even have multiple endpoints on the same phoenix project, alternatively you can create all of them in separate applications and them unite it under an unbrella project (will see it later)Endpoints are responsible for functions that must be executed for every request2.4.3 - RouterThe router is made of two parts:Pipelines: set of functions that must be executed to a specific type of requestRoute table: select which controller must handle the incoming requestThere are 2 default pipelines inside router :browser and :api, each one contains a set of functions that makes some common tasks in web applicationUsually the router is the last plug in the endpoint, it's last job is call the controller which will handle the specific bussiness logic for the incoming request2.4.4 - Controllers, Views and TemplatesControllers are the main module that executes the business logicControllers usaully generates data to be consumed by the viewView uses the data to fulfill a templateTemplates are HTMLs with injected elixir conde inside it2.4.5 - Other Files/lib/\#{project}.ex defines the top-level interface and documentation for the application/lib/\#{project}_web.ex contains some glue code that defines the base structure of the web-related modules/lib/\#{project}_web/channels will learn later","ref":"chapter_2.html#2-4-request-pipeline","title":"2 - First Steps - 2.4 - Request Pipeline","type":"extras"},{"doc":"3 - Controllers","ref":"chapter_3.html","title":"3 - Controllers","type":"extras"},{"doc":"Contexts are modules that handle the business logic and use cases of our systemA specific context handle a bunch of functions with a shared purpose (e.g. Account CRUD on Account's context)This make contexts very useful to your application as a whole, providing code reuse, easy testing, separation of concerns, etcThe controller purpose is to call context functions to execute tasks on the systemThe controller handle web related stuffs such as, routing, protocols, headers, status, etc. On the other hand contexts handle business logicControllers do not know about contexts and vice versa","ref":"chapter_3.html#3-1-contexts","title":"3 - Controllers - 3.1 - Contexts","type":"extras"},{"doc":"Views are modules that handle &quot;rendering&quot;, formating the response in a client understandable way, which for instance could be something like HTML,JSONThis transformation can be something like transform a complex struct such as User into something simpler as first_nameFunctions inside the view module are no different from any other elixir function","ref":"chapter_3.html#3-2-views","title":"3 - Controllers - 3.2 - Views","type":"extras"},{"doc":"Template is a special kind of function that lives inside the view, this function is compiled from a file containing markup language and elixir code (file_name.html.eex)There are 2 ways to inject elixir code inside the template &lt;%= %&gt; and &lt;% %&gt;, the former injects the result on the template, and the later don't (useful for side effects, use only when needed)You can leverage loops and many other elixir stuffs inside templates&lt;h1&gt; Listing Users &lt;/h1&gt; &lt;table&gt; &lt;%= for user &lt;- @users do%&gt; &lt;tr&gt; &lt;td&gt; &lt;%= render &quot;user.html&quot;, user: user %&gt; &lt;/td&gt; &lt;td&gt; &lt;%= link &quot;View&quot;, to: Routes.user_path(@conn, :show, user.id)%&gt; &lt;/td&gt; &lt;/tr&gt; &lt;% end %&gt; &lt;/table&gt;Templates are fast because after compilation they are just functions to be called by the code, and no large string copy is neededTemplates can be nested and reused as independently components using the function render/2This render/2 functions is very important, the first argument is always a template and the second a list of parameters to be given to the templateThe tuple pattern containing :safe is the common way to generate HTML from elixir code, and the text is provided as IO list for performance","ref":"chapter_3.html#3-3-templates","title":"3 - Controllers - 3.3 - Templates","type":"extras"},{"doc":"Helpers are conveniance functions write using pure elixir codeThere is a bunch of predefined helpers in phoenixThese helper functions are defined inside the \#{project_name}_web module, and are injected on view using useIf you want to write your own helpers, write it elsewhere and teherefore import it to the {project_name}_web module inside the proper function. It is because the code will be macro-expanded to each and every correlated modules","ref":"chapter_3.html#3-4-helpers","title":"3 - Controllers - 3.4 - Helpers","type":"extras"},{"doc":"Note that anywhere inside the controller you need to inform the location of templates neither views and the render function works just fineThis happens because phoenix use naming conventions to automatically link controllers , views and templatesIf your controller have the name {module_name}Controller phoenix will automatically import views from {module_name}View and search for templates on templates/{module_name}","ref":"chapter_3.html#3-5-naming-conventions","title":"3 - Controllers - 3.5 - Naming Conventions","type":"extras"},{"doc":"Layouts are special kind of views that are rendered before the view it selfWhen you call the render/2 function, before render the specified view it renders the layout view to provide a consistent markup across all pages without any duplication","ref":"chapter_3.html#3-6-layouts","title":"3 - Controllers - 3.6 - Layouts","type":"extras"}]